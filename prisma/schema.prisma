generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  birthDate DateTime?
  gender    String?
  city      String?
  goals     String?
  bio       String?
  favorites String[]  @default([])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  workoutHistory WorkoutHistory[]
  programs Program[]
}

model WorkoutHistory {
  id          String   @id @default(cuid())
  userId      Int
  date        DateTime
  programId   String?
  programName String?
  workoutId   String?
  workoutName String?
  exercises   WorkoutExercise[]
  notes       String?
  rating      Int?
  createdAt   DateTime @default(now())

  user        User     @relation(fields: [userId], references: [id])
}

model Program {
  id          String    @id @default(cuid())
  name        String
  description String
  userId      Int
  user        User      @relation(fields: [userId], references: [id])
  workouts    Workout[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Workout {
  id        String    @id @default(cuid())
  name      String
  programId String
  program   Program   @relation(fields: [programId], references: [id])
  exercises WorkoutExercise[]
}

model WorkoutExercise {
  id        String   @id @default(cuid())
  workoutId String
  name      String
  sets      Int?
  reps      Int?
  weight    Float?
  duration  Int?
  restTime  Int?
  workout   Workout  @relation(fields: [workoutId], references: [id])
  workoutHistoryId String?
  workoutHistory   WorkoutHistory? @relation(fields: [workoutHistoryId], references: [id])
} 