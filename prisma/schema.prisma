generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int              @id @default(autoincrement())
  email          String           @unique
  password       String
  name           String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  bio            String?
  birthDate      DateTime?
  city           String?
  favorites      String[]         @default([])
  gender         String?
  goals          String?
  workoutHistory WorkoutHistory[]
}

model WorkoutHistory {
  id          String   @id @default(cuid())
  userId      Int
  date        DateTime
  workoutName String?
  notes       String?
  rating      Int?
  createdAt   DateTime @default(now())
  programId   String?
  programName String?
  workoutId   String?
  exercises   Json
  user        User     @relation(fields: [userId], references: [id])
}

model Program {
  id          String    @id @default(cuid())
  name        String
  description String
  isPublic    Boolean   @default(true)
  isSample    Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  workouts    Workout[]
}

model Workout {
  id              String            @id @default(cuid())
  programId       String
  name            String
  order           Int
  program         Program           @relation(fields: [programId], references: [id])
  workoutExercise WorkoutExercise[]
}

model WorkoutExercise {
  id        String  @id
  workoutId String
  name      String
  sets      Int
  reps      Int?
  weight    Float?
  duration  Int?
  restTime  Int?
  order     Int
  workout   Workout @relation(fields: [workoutId], references: [id])
}
